/*
 * Copyright (C) 2014-present Cloudflare, Inc.

 * This software may be modified and distributed under the terms
 * of the MIT license.  See the LICENSE file for details.
 */

'use strict';

const assert = require('assert');
const td = require('testdouble');
const {describe, it, beforeEach, afterEach} = require('@jest/globals');
global.td = require('testdouble');
const Getter = require('../lib/Getter');
require('testdouble-jest')(td, global.jest);

describe('HTTP Client', options => {
  let FakeGetter;
  let Client;

  beforeEach(done => {
    // options = withEnvProxy(options);
    FakeGetter = new Getter(options);
    Client = require('../lib/Client');
    done();
  });

  afterEach(done => {
    td.reset();
    done();
  });

  it('should support User Service Auth keys', () => {
    const getter = FakeGetter;
    const email = 'fake@domain.email';
    const key = 'v1.0-DEADBEEF';
    const body = {
      hello: 'world',
    };

    const options = {
      json: true,
      method: 'GET',
      headers: {
        'X-Auth-User-Service-Key': key,
        'Content-Type': 'application/json',
        Accept: 'application/json',
      },
      query: {
        name: 'world',
      },
    };

    td.when(
      getter.got(
        'https://api.cloudflare.com/client/v4/example/42',
        td.matchers.contains(options)
      )
    ).thenResolve({body});

    const subject = new Client({
      email,
      key,
    });

    const res = subject.request(
      'GET',
      'example/42',
      {
        name: 'world',
      },
      {
        auth: {},
        headers: {},
      },
    );

    return res.then(resp => assert.deepEqual(resp, body));
  });

  it('should support API Tokens', () => {
    const getter = FakeGetter;
    const token = 'vr29SNZEpswxdp';
    const body = {
      hello: 'world',
    };

    const options = {
      json: true,
      method: 'GET',
      headers: {
        Authorization: `Bearer ${token}`,
        'Content-Type': 'application/json',
        Accept: 'application/json',
      },
      query: {
        name: 'world',
      },
    };

    td.when(getter.got(), {ignoreExtraArgs: true}).thenReject();
    td.when(
      getter.got(
        'https://api.cloudflare.com/client/v4/example/42',
        td.matchers.contains(options),
      ),
    ).thenResolve({body});

    const subject = new Client({
      token,
    });

    const res = subject.request(
      'GET',
      'example/42',
      {
        name: 'world',
      },
      {
        auth: {},
        headers: {},
      },
    );

    return res.then(resp => assert.deepEqual(resp, body));
  });

});
